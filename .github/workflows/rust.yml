name: ci

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: ${{ matrix.toolchain }} / ${{ matrix.triple.target }}
    runs-on: ${{ matrix.triple.os }}
    strategy:
      fail-fast: false
      matrix:
        triple:
          - {os: "ubuntu-latest", target: "x86_64-unknown-linux-gnu", cross: false}
          - {os: "ubuntu-latest", target: "armv7-unknown-linux-gnueabihf", cross: true}
          - {os: "ubuntu-latest", target: "aarch64-unknown-linux-gnu", cross: true}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install components
        run: rustup component add --toolchain stable rustfmt clippy

      - name: Fetch
        uses: actions-rs/cargo@v1
        with:
          command: fetch

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target=${{ matrix.triple.target }}
          use-cross: ${{ matrix.triple.cross }}

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build --release
          args: --target=${{ matrix.triple.target }}
          use-cross: ${{ matrix.triple.cross }}
